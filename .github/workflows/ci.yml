name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read
  security-events: write

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        node-version: [20.x, 24.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set env for e2e
      run: |
        echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_USERNAME=test" >> $GITHUB_ENV
        echo "DB_PASSWORD=test" >> $GITHUB_ENV
        echo "DB_DATABASE=testdb" >> $GITHUB_ENV
        echo "DB_SSL=false" >> $GITHUB_ENV
        echo "TYPEORM_SYNC=true" >> $GITHUB_ENV
        echo "TYPEORM_LOGGING=false" >> $GITHUB_ENV
        echo "JWT_SECRET=dummy" >> $GITHUB_ENV
        echo "JWT_EXPIRES_IN=7d" >> $GITHUB_ENV

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Run e2e tests
      run: npm run test:e2e

    - name: Build application
      run: npm run build

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit (npm)
      run: npm audit --audit-level moderate || true

    - name: Trivy FS scan -> SARIF
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: fs
        format: sarif
        output: security-scan.sarif
        ignore-unfixed: true
        severity: CRITICAL,HIGH
        exit-code: '0'

    - name: Upload SARIF
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: security-scan.sarif
